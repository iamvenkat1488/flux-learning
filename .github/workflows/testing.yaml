name: Automate Git Actions

on: 
  workflow_dispatch:

    inputs:
      repository_name:
        description: "The name of the GitHub repository"
        required: true
      new_branch_name:
        description: "The name for the new branch"
        required: true
      commit_message:
        description: 'Commit Message'
        required: true
      user_email:
        description: 'User mail'
        required: true
      user_name:
        description: 'User name'
        required: true
    
jobs:
  automate:
    runs-on: ubuntu-latest
  
    env:
      REPOSITORY_NAME: ${{ github.event.inputs.repository_name}}
      NEW_BRANCH_NAME: ${{ github.event.inputs.new_branch_name }}
      COMMIT_MESSAGE: ${{ github.event.inputs.commit_message }}
      USER_EMAIL: ${{ github.event.inputs.user_email }}
      USER_NAME: ${{ github.event.inputs.user_name }}
    steps:
    - name: Checkout Code
      uses: actions/checkout@v2

    - name: Configure Git
      run: |
        git config user.email "${{ env.USER_EMAIL}}"
        git config user.name "${{ env.USER_NAME }}"
        git config push.default current

    - name: Create a new Branch and switch
      run: git checkout -b ${{ env.NEW_BRANCH_NAME}}
    
    - name: Add changes to staging area
      run: |
        #echo "Testing new Changes" >> jayesh.txt # Adding for testing
        sed -i 's/Production/Testing/g' jayesh.txt
          
    
    # Do the required changes
    
    - name: Commit the change
      run: |
        git add .
        git commit -m "${{ env.COMMIT_MESSAGE}}"
    
    - name: Check if there are no uncommitted changes
      run: |
        if [[ -z $(git status --porcelain) ]]; then
          echo "No uncommitted changes."
        else
          echo "Uncommitted changes found." >&2
          exit 1
        fi
    
    - name: Push changes
      run: |
        git pull origin main
        git merge --ff-only ${{ env.NEW_BRANCH_NAME }}
        git push origin ${{ env.NEW_BRANCH_NAME }}
      env:
        #GH_Token: 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
        GH_Token: ${{ secrets.GH_TOKEN }}

    - name: Merge changes to the new branch
      run: |
        #if [ "$(git rev-parse ${{ env.NEW_BRANCH_NAME }}")" != "$(git rev-parse main)"]; then
          git checkout main
          git pull origin main # Pull changes from main branch
          git merge ${{ env.NEW_BRANCH_NAME }}
          git push origin main
        #else
          #echo "No Need to merge. The new branch already merged with the main branch"
        #fi
        
    - name: Welcome back message
      run: echo "Welcome back, ${{ github.actor }}! Automated Git workflow completed!"




